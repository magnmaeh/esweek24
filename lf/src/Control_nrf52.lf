target C {
    platform: "Zephyr",
    cmake-include: "../lib/nrf52/interrupt.cmake",
    files: "../lib/nrf52/interrupt.c"
};

import Logger, Sensor, ProcessUnbounded, Actuator from "../lib/libControl.lf"

// TODO: Comment over-arching goal

preamble {=
    #include "/tmp/config.h"
=}

main reactor {
    logical action actuate: int

    log = new Logger(n_iterations = {= CONFIG_NITERATIONS =})

    sensor = new Sensor(n_iterations = {= CONFIG_NITERATIONS =})
    process = new ProcessUnbounded()
    actuator = new Actuator(n_iterations = {= CONFIG_NITERATIONS =})
    
    sensor.ts -> log.ts_sensor
    process.ts -> log.ts_process
    actuator.ts -> log.ts_actuator

    reaction(shutdown) {=
        printf("main shutdown\n");
    =}

    sensor.y -> process.x
    process.y -> actuator.x
}

